// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module media;

import "lib/ui/geometry/fidl/geometry.fidl";
import "lib/ui/views/fidl/view_token.fidl";

// Video-specific renderer.
interface VideoRenderer {
  // Special value for GetStatus version_last_seen parameter to get the current
  // status immediately.
  const uint64 kInitialStatus = 0;

  // Gets the status. To get the status immediately, call
  // GetStatus(kInitialStatus). To get updates thereafter, pass the version
  // sent in the previous callback.
  GetStatus@0(uint64 version_last_seen)
      => (uint64 version, VideoRendererStatus status);

  // Creates a video view.
  CreateView@1(mozart.ViewOwner& view_owner);
};

// VideoRenderer status information.
struct VideoRendererStatus {
  // Size of the video currently being displayed.
  mozart.Size video_size;

  // Relative dimensions of a pixel.
  mozart.Size pixel_aspect_ratio;
};
