# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/go/go_binary.gni")
import("//build/go/go_test.gni")
import("//build/host.gni")
import("//build/package.gni")

go_binary("pm_bin") {
  output_name = "pm"
  gopackage = "fuchsia.googlesource.com/pm/cmd/pm"
  go_dependencies = [
    {
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
  ]
}

go_binary("pmd_bin") {
  output_name = "pmd"
  gopackage = "fuchsia.googlesource.com/pm/cmd/pmd"
  go_dependencies = [
    {
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "thinfs"
      source = "//garnet/go/src/thinfs"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
  ]
}

go_binary("pkgsvr_bin") {
  output_name = "pkgsvr"
  gopackage = "fuchsia.googlesource.com/pm/cmd/pkgsvr"
  go_dependencies = [
    {
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "thinfs"
      source = "//garnet/go/src/thinfs"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
  ]
}

go_binary("installblob_bin") {
  output_name = "installblob"
  gopackage = "fuchsia.googlesource.com/pm/cmd/installblob"
  go_dependencies = [
    {
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "thinfs"
      source = "//garnet/go/src/thinfs"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
  ]
}

go_test("pkgfs_test_bin") {
  output_name = "pkgfs_test"
  gopackage = "fuchsia.googlesource.com/pm/pkgfs"
  go_dependencies = [
    {
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "thinfs"
      source = "//garnet/go/src/thinfs"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
  ]
}

package("pm") {
  system_image = true

  deps = [
    ":pm_bin",
  ]

  binaries = [ {
        name = "pm"
      } ]
}

package("pmd") {
  deps = [
    ":pmd_bin",
  ]

  binary = "pmd"

  meta = [ {
        path = rebase_path("cmd/pmd/meta/sandbox")
        dest = "sandbox"
      } ]
}

package("pkgsvr") {
  system_image = true

  deps = [
    ":pkgsvr_bin",
  ]

  binaries = [ {
        name = "pkgsvr"
      } ]
}

package("installblob") {
  system_image = true

  deps = [
    ":installblob_bin",
  ]

  binaries = [ {
        name = "installblob"
      } ]
}

package("pkgfs_test") {
  system_image = true

  deps = [
    ":pkgfs_test_bin",
  ]

  tests = [ {
        name = "pkgfs_test"
      } ]
}

install_host_tools("host") {
  deps = [
    ":pm_bin",
  ]
  outputs = [
    "pm",
  ]
}
