# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//packages/package.gni")
import("//third_party/protobuf/proto_library.gni")

package("cobalt") {
  deps = [
    ":bin",
  ]

  binary = "cobalt"

  meta = [ {
        path = rebase_path("meta/sandbox")
        dest = "sandbox"
      } ]
}

package("cobalt_tests") {
  testonly = true
  system_image = true


  deps = [
    ":cobalt_testapp",
    ":cobalt_testapp_no_network",
    ":cobalt_unittests",
  ]

  binaries = [
    {
      name = "cobalt_testapp"
    },
  ]

  tests = [
    {
      name = "cobalt_unittests"
    },

    {
      name = "cobalt_testapp_no_network"
    },
  ]
}

executable("bin") {
  output_name = "cobalt"

  sources = [
    "cobalt_main.cc",
    "config.h",
  ]

  deps = [
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/cobalt/fidl:fidl",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//third_party/cobalt/encoder",
    "//third_party/grpc:grpc++",

    # TODO(rudominer) Change to protobuf_lite after we have a different way
    # of deserializing a message from a human-readable string.
    "//third_party/protobuf:protobuf_full",
  ]
}

executable("cobalt_unittests") {
  testonly = true

  deps = [
    "//third_party/cobalt/encoder:unittests",
  ]
}

executable("cobalt_testapp") {
  sources = [
    "cobalt_testapp.cc",
  ]

  deps = [
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/cobalt/fidl",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
  ]
}

copy("cobalt_testapp_no_network") {
  sources = [
    "cobalt_testapp_no_network",
  ]

  outputs = [
    "$root_out_dir/cobalt_testapp_no_network",
  ]
}
